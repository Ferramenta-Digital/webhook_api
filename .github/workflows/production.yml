name: Production

on:
  push:
    branches:
      - 'main'


env:
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID_WEEHOO }}
  GCP_REGION: ${{ secrets.GCP_REGION_WEBHOO }}
  GCP_SA_KEY: ${{ secrets.GCP_KEY_WEEHOO }}
  GCP_IMAGE: gcr.io/${{ secrets.GCP_PROJECT_ID_WEEHOO }}/base-api:${{  github.sha }}
  GCP_SERVICE_NAME: ${{ secrets.GCP_SERVICE_NAME }}
  ENVIRONMENT: production

jobs:
  build:
    name: 'Build'
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Cloud SDK
      uses: google-github-actions/setup-gcloud@v0.2.0
      with:
        project_id: ${{ env.GCP_PROJECT_ID }}
        service_account_key: ${{ env.GCP_SA_KEY }}
        export_default_credentials: true

    - name: Authorize Docker push
      run: gcloud auth configure-docker

    - name: Build and Push Container
      run: |-
        docker build -t ${{ env.GCP_IMAGE }} ./
        docker push ${{ env.GCP_IMAGE }}


  deploy:
    name: 'Deploy - Terraform'
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: Production
      url: https://api.web.hoo.tools
    env:
      TF_VAR_gcp_project_id: ${{ secrets.GCP_PROJECT_ID_WEEHOO }}
      TF_VAR_gcp_key_file: ${{ secrets.GCP_KEY_WEEHOO }}
      TF_VAR_gcp_region: ${{ secrets.GCP_REGION_WEBHOO }}
      TF_VAR_gcp_zone: ${{ secrets.GCP_REGION_WEBHOO }}-a
      TF_VAR_gcp_project_image: gcr.io/${{ secrets.GCP_PROJECT_ID_WEEHOO }}/base-api:${{ github.sha }}
      TF_VAR_service_name: ${{ secrets.GCP_SERVICE_NAME }}-production
      TF_VAR_domain_service: api.web.hoo.tools
      TF_VAR_NODE_ENV: production
      TF_VAR_ENV_DATABASE_URL: ${{ secrets.DATABASE_URL }}
      TF_VAR_ENV_JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
      TF_VAR_ENV_MAIL_HOST: ${{ secrets.MAIL_HOST }}
      TF_VAR_ENV_MAIL_USER: ${{ secrets.MAIL_USER }}
      TF_VAR_ENV_MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}
      TF_VAR_ENV_MAIL_FROM: ${{ secrets.MAIL_FROM }}
    defaults:
      run:
        shell: bash
        working-directory: ./infra
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Setup Cloud SDK
      uses: google-github-actions/setup-gcloud@v0.2.0
      with:
        project_id: ${{ env.TF_VAR_gcp_project_id }}
        service_account_key: ${{ env.TF_VAR_gcp_key_file }}
        export_default_credentials: true

    - name: Terraform Init
      id: init
      run: terraform init -backend-config="prefix=terraform/${{ env.TF_VAR_NODE_ENV }}/api-service/${{ env.TF_VAR_service_name }}"

    - name: Terraform Format
      id: fmt
      run: terraform fmt -check

    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color

    - name: Terraform Plan
      id: plan
      run: terraform plan -no-color
      continue-on-error: true

    - name: Terraform Plan Status
      if: steps.plan.outcome == 'failure'
      run: exit 1

    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: terraform apply -auto-approve